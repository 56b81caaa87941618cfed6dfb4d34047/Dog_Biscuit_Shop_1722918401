{
    "id": "contact_form_table_1722996132",
    "name": "contact_form_table",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "// To add this component to the user's app, you must follow all three of these steps:\n// 1. In the user app html file, include `<contact-form-table></contact-form-table>` in the place where the chatbot needs to be inserted.\n// 2. In the user app, in the html file's <head> section, add the import for this component JS file './components/contact-form-table'. You are strictly required to **NOT** remove anything else.\n// 3. You are given a correct SQL Statement -- replace the ``PLACEHOLDER_DATA_CREATION_SQL_STATEMENT`` variable in this field with the actual SQL statement.\n\nVue.component('contact_form_table_1722996132', {\n  template:`\n  <div class=\"bg-gray-200 m-12\">\n  <div class=\"flex items-center justify-center p-12\">\n      <div class=\"mx-auto w-full max-w-[550px]\">\n        <form @submit.prevent=\"submitForm\">\n          <div class=\"mb-5\" v-for=\"(field, index) in fields\" :key=\"index\">\n            <label :for=\"field.name\" class=\"mb-3 block font-bold text-black\">{ field.label }</label>\n            <input :type=\"field.type\" :name=\"field.name\" :id=\"field.name\" :placeholder=\"field.placeholder\" v-model=\"form[field.name]\" class=\"w-full rounded-md bg-white py-3 px-6 text-black font-bold outline-none focus:ring-0\"/>\n          </div>\n          <br/>\n          <div><button class=\"font-semibold rounded-md py-3 px-8 text-white outline-none\" type=\"submit\" @click=\"submitForm\" style=\"background-color:red !important\">Submit</button></div>\n        </form>\n      </div>\n    </div>\n    \n    <br/>\n    <br/>\n\n    <div v-if=\"insertSqlStatus\" class=\"bg-green-500 border-t-4 rounded-b px-4 py-3 mt-15\" role=\"alert\">\n      <div class=\"flex\">\n      <div class=\"py-1\"><svg class=\"fill-current text-black h-6 w-6 mr-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path class=\"fill-current text-black\" d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\"/></svg></div>    \n        <div><p class=\"font-bold text-black mt-1\">Your Data Has Been Inserted Successfully!</p></div>\n      </div>\n    </div>\n</div>\n  `,\n  delimiters: ['{','}'],\n  data() {\n      return {\n          form: {},\n          fields: [],\n          createSqlStatement: \"PLACEHOLDER_DATA_CREATION_SQL_STATEMENT\",\n          insertSqlStatus: false\n      }\n  },\n  mounted() {\n      this.initializeForm();\n  },\n\n  methods: {\n      // start initializeForm() method\n      initializeForm() {\n        const sql = this.createSqlStatement.replace('CREATE TABLE', '').trim();\n        const columns = sql.split('(')[1].replace(')', '').split(', ');\n        this.fields = columns.map((column) => {\n            let [name] = column.split(' ');\n            name = name.replace(\"_\",\" \")\n            let formData = {\n                name: name.trim(),\n                label: name.trim(),\n                type: 'text',\n                placeholder: \"Enter Your \" + name.charAt(0).toUpperCase() + name.slice(1).toLowerCase(),\n            }\n            return formData;\n        });\n    },\n      //end initializeForm() method\n      \n      // start submitForm() method\n      submitForm() {\n          const formValues = Object.values(this.form);\n          const tableName = this.createSqlStatement.match(/CREATE TABLE (\\w+)/)[1];\n          const columns = this.fields.map(field => field.name).join(', ');\n          const placeholders = this.fields.map((_, index) => '$' + (index + 1)).join(', ');\n      \n          let insertSqlStatement = 'INSERT INTO ' + tableName + ' (' + columns + ') VALUES (' + placeholders + ')';\n      \n          // Construct the values part of the SQL statement\n          const values = formValues.map(value => typeof value === 'string' ? \"'\" + value + \"'\" : value).join(', ');\n          insertSqlStatement = insertSqlStatement.replace(placeholders, values);\n      \n          this.insertData(insertSqlStatement);\n      },\n      // end submitForm() method\n\n      // start insertData() method\n      insertData(sql) {\n          console.log('Insertion sql statement: ', sql);\n\n          return axios.post('https://makeinfinite-mentat-dev.azurewebsites.net/insert_data_into_table', {\n              insert_sql_statement: sql\n          })\n          .then((response) => {\n              console.log('Response: ', JSON.stringify(response));\n              if (response.data.status === \"success\") {\n                  this.insertSqlStatus = true;\n                  setTimeout(() => {\n                      this.insertSqlStatus = false;\n                  }, 5000)\n              }\n          })\n          .catch(error => {\n              console.error('Error:', error);\n          });\n      }\n      //end insertData() method\n  }\n})"
    },
    "w": 7,
    "h": 7,
    "x": 5,
    "y": 29,
    "i": "3",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true
}